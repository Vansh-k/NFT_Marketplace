{"ast":null,"code":"var _jsxFileName = \"/Users/vanshkapoor/Desktop/NFT_Marketplace/src/components/Marketplace.js\",\n    _s = $RefreshSig$();\n\nimport Navbar from \"./Navbar\";\nimport NFTTile from \"./NFTTile\";\nimport MarketplaceJSON from \"../Marketplace.json\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Marketplace() {\n  _s();\n\n  const sampleData = [{\n    name: \"NFT#1\",\n    description: \"Alchemy's First NFT\",\n    website: \"http://axieinfinity.io\",\n    image: \"https://gateway.pinata.cloud/ipfs/QmTsRJX7r5gyubjkdmzFrKQhHv74p5wT9LdeF1m3RTqrE5\",\n    price: \"0.03ETH\",\n    currentlySelling: \"True\",\n    address: \"0xe81Bf5A757CB4f7F82a2F23b1e59bE45c33c5b13\"\n  }, {\n    name: \"NFT#2\",\n    description: \"Alchemy's Second NFT\",\n    website: \"http://axieinfinity.io\",\n    image: \"https://gateway.pinata.cloud/ipfs/QmdhoL9K8my2vi3fej97foiqGmJ389SMs55oC5EdkrxF2M\",\n    price: \"0.03ETH\",\n    currentlySelling: \"True\",\n    address: \"0xe81Bf5A757C4f7F82a2F23b1e59bE45c33c5b13\"\n  }, {\n    name: \"NFT#3\",\n    description: \"Alchemy's Third NFT\",\n    website: \"http://axieinfinity.io\",\n    image: \"https://gateway.pinata.cloud/ipfs/QmTsRJX7r5gyubjkdmzFrKQhHv74p5wT9LdeF1m3RTqrE5\",\n    price: \"0.03ETH\",\n    currentlySelling: \"True\",\n    address: \"0xe81Bf5A757C4f7F82a2F23b1e59bE45c33c5b13\"\n  }];\n  const [data, updateData] = useState();\n  const [dataFetched, updateFetched] = useState(false);\n\n  async function getAllNFTs() {\n    const ethers = require(\"ethers\"); //After adding your Hardhat network to your metamask, this code will get providers and signers\n\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner(); //Pull the deployed contract instance\n\n    let contract = new ethers.Contract(MarketplaceJSON.address, MarketplaceJSON.abi, signer); //create an NFT Token\n\n    let transaction = await contract.getAllNFTs(); //Fetch all the details of every NFT from the contract and display\n\n    const items = await Promise.all(transaction.map(async i => {\n      const tokenURI = await contract.tokenURI(i.tokenId);\n      let meta = await axios.get(tokenURI);\n      meta = meta.data;\n      let price = ethers.utils.formatUnits(i.price.toString(), \"ether\");\n      let item = {\n        price,\n        tokenId: i.tokenId.toNumber(),\n        seller: i.seller,\n        owner: i.owner,\n        image: meta.image,\n        name: meta.name,\n        description: meta.description\n      };\n      return item;\n    }));\n    updateFetched(true);\n    updateData(items);\n  }\n\n  if (!dataFetched) getAllNFTs();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col place-items-center mt-20\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:text-xl font-bold text-white\",\n        children: \"Top NFTs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex mt-5 justify-between flex-wrap max-w-screen-xl text-center\",\n        children: data.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(NFTTile, {\n            data: value\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Marketplace, \"P5ouIX6J6U8Ml8er0k4RWacDztg=\");\n\n_c = Marketplace;\n\nvar _c;\n\n$RefreshReg$(_c, \"Marketplace\");","map":{"version":3,"names":["Navbar","NFTTile","MarketplaceJSON","axios","useState","Marketplace","sampleData","name","description","website","image","price","currentlySelling","address","data","updateData","dataFetched","updateFetched","getAllNFTs","ethers","require","provider","providers","Web3Provider","window","ethereum","signer","getSigner","contract","Contract","abi","transaction","items","Promise","all","map","i","tokenURI","tokenId","meta","get","utils","formatUnits","toString","item","toNumber","seller","owner","value","index"],"sources":["/Users/vanshkapoor/Desktop/NFT_Marketplace/src/components/Marketplace.js"],"sourcesContent":["import Navbar from \"./Navbar\";\nimport NFTTile from \"./NFTTile\";\nimport MarketplaceJSON from \"../Marketplace.json\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\n\nexport default function Marketplace() {\n  const sampleData = [\n    {\n      name: \"NFT#1\",\n      description: \"Alchemy's First NFT\",\n      website: \"http://axieinfinity.io\",\n      image:\n        \"https://gateway.pinata.cloud/ipfs/QmTsRJX7r5gyubjkdmzFrKQhHv74p5wT9LdeF1m3RTqrE5\",\n      price: \"0.03ETH\",\n      currentlySelling: \"True\",\n      address: \"0xe81Bf5A757CB4f7F82a2F23b1e59bE45c33c5b13\",\n    },\n    {\n      name: \"NFT#2\",\n      description: \"Alchemy's Second NFT\",\n      website: \"http://axieinfinity.io\",\n      image:\n        \"https://gateway.pinata.cloud/ipfs/QmdhoL9K8my2vi3fej97foiqGmJ389SMs55oC5EdkrxF2M\",\n      price: \"0.03ETH\",\n      currentlySelling: \"True\",\n      address: \"0xe81Bf5A757C4f7F82a2F23b1e59bE45c33c5b13\",\n    },\n    {\n      name: \"NFT#3\",\n      description: \"Alchemy's Third NFT\",\n      website: \"http://axieinfinity.io\",\n      image:\n        \"https://gateway.pinata.cloud/ipfs/QmTsRJX7r5gyubjkdmzFrKQhHv74p5wT9LdeF1m3RTqrE5\",\n      price: \"0.03ETH\",\n      currentlySelling: \"True\",\n      address: \"0xe81Bf5A757C4f7F82a2F23b1e59bE45c33c5b13\",\n    },\n  ];\n  const [data, updateData] = useState();\n  const [dataFetched, updateFetched] = useState(false);\n\n  async function getAllNFTs() {\n    const ethers = require(\"ethers\");\n    //After adding your Hardhat network to your metamask, this code will get providers and signers\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    //Pull the deployed contract instance\n    let contract = new ethers.Contract(\n      MarketplaceJSON.address,\n      MarketplaceJSON.abi,\n      signer\n    );\n    //create an NFT Token\n    let transaction = await contract.getAllNFTs();\n\n    //Fetch all the details of every NFT from the contract and display\n    const items = await Promise.all(\n      transaction.map(async (i) => {\n        const tokenURI = await contract.tokenURI(i.tokenId);\n        let meta = await axios.get(tokenURI);\n        meta = meta.data;\n\n        let price = ethers.utils.formatUnits(i.price.toString(), \"ether\");\n        let item = {\n          price,\n          tokenId: i.tokenId.toNumber(),\n          seller: i.seller,\n          owner: i.owner,\n          image: meta.image,\n          name: meta.name,\n          description: meta.description,\n        };\n        return item;\n      })\n    );\n\n    updateFetched(true);\n    updateData(items);\n  }\n\n  if (!dataFetched) getAllNFTs();\n\n  return (\n    <div>\n      <Navbar></Navbar>\n      <div className=\"flex flex-col place-items-center mt-20\">\n        <div className=\"md:text-xl font-bold text-white\">Top NFTs</div>\n        <div className=\"flex mt-5 justify-between flex-wrap max-w-screen-xl text-center\">\n          {data.map((value, index) => {\n            return <NFTTile data={value} key={index}></NFTTile>;\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}